/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ChatWindow.java
 *
 * Created on Jun 21, 2013, 3:28:46 PM
 */
package com.quest.disconnect.chat;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.Iterator;
import java.util.concurrent.ConcurrentHashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author connie
 */
public class ChatWindow extends javax.swing.JFrame implements KeyListener {
     private static int messageCount=0;
     private static final int PORT=37829;
     private static ConcurrentHashMap aliases=new ConcurrentHashMap();
     private static ConcurrentHashMap ips=new ConcurrentHashMap();
     private static ConcurrentHashMap<String,ChatClient> clients=new ConcurrentHashMap();
     private static int Cheight;
     private static int Cwidth;
    /** Creates new form ChatWindow */
     public ChatWindow() {
        try {
            final ChatServer chat=new ChatServer(PORT);
            initComponents();
            Dimension dim= Toolkit.getDefaultToolkit().getScreenSize();
            Cwidth=dim.width;
            Cheight=dim.height;
            this.setSize((int)(Cwidth*0.8),(int)(Cheight*0.7));
            this.setResizable(false);
            this.addWindowListener(new WindowAdapter() {  // A listener to end the program when the user closes the window.
              @Override
              public void windowClosing(WindowEvent evt) {
                  try {
                    // disconnect all connected clients
                    // and send disconnect messages to all servers
                    Iterator<String> iter = clients.keySet().iterator();
                    while(iter.hasNext()){
                       clients.get(iter.next()).disconnect();
                    }
                   if(chat!=null){
                    chat.shutDownHub();   
                   }    
                    Thread.sleep(1000);
                    } catch (Exception ex) {
                        Logger.getLogger(ChatWindow.class.getName()).log(Level.SEVERE, null, ex);
                        System.exit(0); 
                    }
                   System.exit(0); 
              }
           });
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "The chat application is already running");
            Logger.getLogger(ChatWindow.class.getName()).log(Level.SEVERE, null, ex);
            System.exit(0);
        }
    }
    
    public static void newMessage(String msg,String from, String to){
         JPanel panel=new JPanel(new FlowLayout());
         JTextArea text;
         if(from==null){
             panel.setBorder(BorderFactory.createLineBorder(Color.BLUE, 2));
             text=new JTextArea("me >> "+to+" : "+msg);
         }
         else{
            text=new JTextArea(from+" >> "+"me : "+msg);
            panel.setBorder(BorderFactory.createLineBorder(Color.CYAN, 5));
         }
         text.setPreferredSize(new Dimension(Cwidth/2, 100));
         text.setFont(new Font("calibri", Font.PLAIN, 14));
         text.setEnabled(false);
         messageCount++;
         panel.add(text,0);
        
         jPanel2.setLayout(new GridLayout(messageCount,1));
         jPanel2.add(panel);
         jPanel2.revalidate();
         jPanel2.repaint();
    }
    
    
   
    
    
    
    public static void setInfo(String info){
        jLabel2.setText(info);
    }
    
    public static ConcurrentHashMap getIdentities(){
       return aliases; 
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();

        jButton4.setText("jButton4");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Disconnect Chat");

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Calibri", 0, 14));
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Send Message");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Send File");

        jLabel1.setText("Alias");

        jCheckBox1.setToolTipText("Press enter to send");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setSelected(true);
        jCheckBox2.setToolTipText("Play notification sounds");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 305, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 536, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(jPanel1);

        jButton3.setText("Add Alias");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 993, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 357, Short.MAX_VALUE)
        );

        jScrollPane3.setViewportView(jPanel2);

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox1)
                                .addGap(18, 18, 18)
                                .addComponent(jCheckBox2))
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 354, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 995, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(266, 266, 266))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton3)
                                .addComponent(jButton2)
                                .addComponent(jButton1))
                            .addComponent(jCheckBox2)
                            .addComponent(jCheckBox1)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
    //implement send, get the ip address with the correspoding alias
   sendMessage();
}//GEN-LAST:event_jButton1ActionPerformed

private void sendMessage(){
        try {
            String alias= (String) jComboBox1.getSelectedItem();
            if(alias==null || alias.equals("")){
             return;   
            }
            String ip=(String) aliases.get(alias);
            ChatClient client= clients.get(ip);
            String msg=jTextArea1.getText();
            if(client==null){
              JOptionPane.showMessageDialog(null, "Please connect to start chatting");  
              return;
            }
            String hostAddress = InetAddress.getLocalHost().getHostAddress();
            client.send(new Response(hostAddress,msg));
            newMessage(msg,null,alias);
            setInfo("Message sent to : "+alias);
            jTextArea1.setText("");
            jTextArea1.requestFocus();
        } catch (UnknownHostException ex) {
            Logger.getLogger(ChatWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
}



private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
// TODO add your handling code here:
//jPanel1
  final String ip=JOptionPane.showInputDialog("Enter the computer name or ip address of the computer");
  if(ip.equals("")){
    return;
  }
  String aliasName=JOptionPane.showInputDialog("Enter the alias to refer to this computer");
  if(aliasName.equals("")){
    return;  
  }
  final JButton connect=new JButton("Connect");
  connect.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
              Thread th=new Thread(){
                    @Override
               public void run(){
                try {
                    if(clients.contains(ip)){
                      setInfo("Still trying to connect to host: "+ip);
                      return; 
                    }
                    setInfo("Connecting to host: "+ip);
                    connect.setEnabled(false);
                    ChatClient client=new ChatClient(ip, PORT);
                    clients.put(ip, client);
                    
                } catch (IOException ex) {
                    connect.setEnabled(true);
                    setInfo("Error connecting to host: "+ip);
                    clients.remove(ip);
                }
               }
              };
             th.start();
            }
        });
  JButton disconnect=new JButton("Disconnect");
  disconnect.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
              ChatClient client = clients.get(ip);
              if(client==null){
                return;  
              }
              client.disconnect();
              clients.remove(ip);
              connect.setEnabled(true);
            }
        });
  JLabel alias=new JLabel(aliasName);
  aliases.put(aliasName, ip);
  ips.put(ip, aliasName);
  jComboBox1.addItem(aliasName);
  JLabel ipLabel=new JLabel(ip);
  JPanel panel=new JPanel(new FlowLayout());
  ipLabel.setFont(new Font("calibri", Font.PLAIN, 14));
  alias.setFont(new Font("calibri", Font.PLAIN, 14));
  panel.add(disconnect,0);
  panel.add(connect,0);
  panel.add(alias,0);
  panel.add(ipLabel,0);
  int gridSize=10;
  if(aliases.size()>10){
      gridSize=aliases.size();
  }
  jPanel1.setLayout(new GridLayout(gridSize,4));
  jPanel1.add(panel);
  jPanel1.revalidate();
  jPanel1.repaint();
  
}//GEN-LAST:event_jButton3ActionPerformed

private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jComboBox1ActionPerformed

private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jCheckBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ChatWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(ChatWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(ChatWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(ChatWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new ChatWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private static javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private static javax.swing.JPanel jPanel2;
    private static javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {
        
    }

    @Override
    public void keyPressed(KeyEvent e) {
        
    }

    @Override
    public void keyReleased(KeyEvent e) {
       System.out.println("got hereeee");
       if(jCheckBox1.isSelected() && jTextArea1.hasFocus() && e.getKeyCode()==13){
           sendMessage();
       }
    }
}
